{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"w",
				"weight\tstatement"
			],
			[
				"my",
				"my_hair\tstatement"
			],
			[
				"my_h",
				"my_height\tstatement"
			],
			[
				"if",
				"ifelse\tif(…) else"
			],
			[
				"inc",
				"inc\t#include <…>"
			],
			[
				"i",
				"ifnd\tifndef (…)"
			],
			[
				"main",
				"main\tmain()"
			],
			[
				"in",
				"inc\t#include \"…\""
			],
			[
				"for",
				"for_\tFor Loop"
			],
			[
				"st",
				"struct_\tstruct"
			],
			[
				"fo",
				"forv\tVector For Loop"
			],
			[
				"s",
				"struct\tstruct"
			],
			[
				"id",
				"IDT"
			],
			[
				"cu",
				"curFailedCase"
			],
			[
				"al",
				"allFailedCases"
			]
		]
	},
	"buffers":
	[
		{
			"file": "makefile",
			"settings":
			{
				"buffer_size": 1337,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "tests/hashmap_tests.c",
			"settings":
			{
				"buffer_size": 725,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/main.c",
			"settings":
			{
				"buffer_size": 430,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/usr/include/errno.h",
			"settings":
			{
				"buffer_size": 2367,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Anaconda Python Builder",
	"build_system_choices":
	[
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/User/docker_build.sublime-build",
					""
				]
			],
			[
				"Anaconda Python Builder",
				""
			]
		],
		[
			[
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					""
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				"Clean"
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/User/docker_build.sublime-build",
					""
				]
			],
			[
				"Packages/User/docker_build.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				":w",
				":w - Save"
			],
			[
				"syn",
				"Set Syntax: C"
			],
			[
				":s",
				":w - Save"
			],
			[
				"syntax:py",
				"Set Syntax: Python"
			],
			[
				"enabl",
				"Package Control: Enable Package"
			],
			[
				"syntax: p",
				"Set Syntax: Python"
			],
			[
				"key",
				"Preferences: Key Bindings"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"menu",
				"View: Toggle Menu"
			],
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"ena",
				"Package Control: Enable Package"
			],
			[
				"brac",
				"BracketHighlighter: Settings"
			],
			[
				"enab",
				"Package Control: Enable Package"
			],
			[
				"pack",
				"Package Control: Enable Package"
			],
			[
				"package",
				"Package Control: Enable Package"
			],
			[
				"pakcage",
				"Package Control: Disable Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"brow",
				"Preferences: Browse Packages"
			],
			[
				"color",
				"UI: Select Color Scheme"
			],
			[
				"them",
				"UI: Select Theme"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"setting",
				"Preferences: Settings"
			],
			[
				"syntax i",
				"Set Syntax: C Improved"
			],
			[
				"who",
				"WhoCalled: Run indexer"
			],
			[
				"Clang Forma",
				"Clang Format: Set Path"
			],
			[
				"clang",
				"Clang Format: Select Style"
			],
			[
				"set Syntax: C I",
				"Set Syntax: C Improved"
			],
			[
				"set syntax:C im",
				"Set Syntax: C Improved"
			],
			[
				"set",
				"Set Syntax: C"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Package Control:",
				"Package Control: Install Package"
			],
			[
				"prv",
				"PackageResourceViewer: Open Resource"
			],
			[
				":W",
				":w - Save"
			],
			[
				"Snippet: ",
				"Snippet: idt_default"
			]
		],
		"width": 461.0
	},
	"console":
	{
		"height": 164.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/alex/workspace/c_hard_way/ex37",
		"/home/alex/workspace/c_hard_way/ex37/src",
		"/home/alex/workspace/c_hard_way/ex37/tests"
	],
	"file_history":
	[
		"/home/alex/workspace/dummy/bariumBoxer/include/common/scsr/clockmatrix/rev-b/SCSR.h",
		"/home/alex/workspace/dummy/bariumBoxer/include/common/scsr/clockmatrix/rev-b/ex11.py",
		"/home/alex/Downloads/bstrlib-master/bstrlib.txt",
		"/home/alex/workspace/c_hard_way/ex36/src/dbg.h",
		"/home/alex/workspace/dummy/bariumBoxer/scripts/repoScripts/python/clockMatrix/datasheetProgrammingGuide/tests/data/scsrSampleMif/expected_SCSR_Module_Table_internal.mif",
		"/home/alex/workspace/dummy/bariumBoxer/source/unitTests/unitTestsOutputTdcTask2.c",
		"/home/alex/Documents/python/1.py",
		"/home/alex/Documents/python/ex4.py",
		"/home/alex/Documents/python/ex5.py",
		"/home/alex/Documents/python/ex6.py",
		"/home/alex/Documents/python/ex7.py",
		"/home/alex/Documents/python/ex10.py",
		"/home/alex/.config/sublime-text-3/Packages/Anaconda/Anaconda.sublime-settings",
		"/home/alex/Downloads/bstrlib-master/README.md",
		"/home/alex/Documents/format.c",
		"/home/alex/.config/sublime-text-3/Packages/User/C_my.sublime-build",
		"/home/alex/workspace/dummy/bariumBoxer/source/boot/bootMain.c",
		"/home/alex/workspace/dummy/bariumBoxer/source/app/appMain.c",
		"/home/alex/workspace/dummy/bariumBoxer/version.yml",
		"/home/alex/workspace/dummy/bariumBoxer/include/app/scsrDpllHandler.h",
		"/home/alex/workspace/dummy/bariumBoxer/source/common/scsrApi.c",
		"/home/alex/workspace/dummy/bariumBoxer/source/unitTests/unitTestsGpioTodNotification.c",
		"/home/alex/workspace/dummy/bariumBoxer/source/common/drivers/ANALOG.c",
		"/home/alex/workspace/dummy/bariumBoxer/include/app/dpllStateMachine.h",
		"/home/alex/workspace/dummy/bariumBoxer/include/common/scsr/clockmatrix/rev-b/SCSR_DPLL_CTRL.h",
		"/home/alex/workspace/dummy/bariumBoxer/include/common/csr/clockmatrix/fpga/CSR_ANALOG.h",
		"/home/alex/workspace/dummy/bariumBoxer/source/app/outputTdcTask.c",
		"/home/alex/workspace/dummy/bariumBoxer/include/common/drivers/ANALOG.h",
		"/home/alex/workspace/dummy/bariumBoxer/source/common/drivers/OUTPUT_TDC.c",
		"/home/alex/workspace/dummy/bariumBoxer/source/app/dpllStateMachine.c",
		"/home/alex/workspace/dummy/bariumBoxer/include/app/outputTdcTask.h",
		"/home/alex/workspace/dummy/bariumBoxer/include/common/drivers/TOD.h",
		"/home/alex/workspace/dummy/bariumBoxer/source/app/scsrDpllHandler.c",
		"/home/alex/workspace/dummy/bariumBoxer/source/app/sysApll.c",
		"/home/alex/workspace/dummy/bariumBoxer/include/common/csr/clockmatrix/rev-b/CSR_ANALOG.h",
		"/home/alex/workspace/dummy/bariumBoxer/include/common/csr/clockmatrix/rev-b/CSR.h",
		"/home/alex/workspace/dummy/bariumBoxer/include/app/todTask.h",
		"/home/alex/workspace/dummy/bariumBoxer/source/common/drivers/TOD.c",
		"/home/alex/workspace/dummy/bariumBoxer/include/common/csr/clockmatrix/fpga/CSR.h",
		"/home/alex/.config/sublime-text-3/Packages/WhoCalled Function Finder/WhoCalled.sublime-settings",
		"/home/alex/.config/sublime-text-3/Packages/User/WhoCalled.sublime-settings",
		"/home/alex/workspace/dummy/bariumBoxer/include/common/scsr/clockmatrix/rev-b/SCSR_OUTPUT_TDC_CFG.h",
		"/home/alex/workspace/dummy/bariumBoxer/scripts/repoScripts/python/clockMatrix/csrXmlParse/csr/tests/data/TestScsrGeneration/expectedScsrHeader.h",
		"/home/alex/workspace/dummy/bariumBoxer/source/unitTests/unitTestsDpllStateMachineMisc.c",
		"/home/alex/workspace/dummy/bariumBoxer/source/unitTests/unitTestsGpioAlertOut.c",
		"/home/alex/workspace/dummy/bariumBoxer/include/common/Print.h",
		"/home/alex/workspace/dummy/bariumBoxer/source/common/Common.c",
		"/home/alex/workspace/dummy/bariumBoxer/include/common/Target.h",
		"/home/alex/workspace/dummy/bariumBoxer/include/common/Common.h",
		"/home/alex/workspace/dummy/bariumBoxer/source/common/drivers/I2CM.c",
		"/home/alex/workspace/dummy/bariumBoxer/source/common/deviceInfo.c",
		"/home/alex/workspace/dummy/bariumBoxer/include/common/deviceInfo.h",
		"/home/alex/Documents/python/ram_usage.py",
		"/home/alex/workspace/dummy/bariumBoxer/source/app/configuration.c",
		"/home/alex/workspace/dummy/bariumBoxer/source/unitTests/unitTestsGpioUserControl.c",
		"/home/alex/workspace/dummy/bariumBoxer/source/unitTests/unitTestsHelper.c",
		"/home/alex/workspace/dummy/bariumBoxer/build/clockmatrix/fpga/fpga.mk",
		"/home/alex/workspace/dummy/bariumBoxer/source/common/drivers/GPIO.c",
		"/home/alex/workspace/dummy/bariumBoxer/source/common/startup_cmx.c",
		"/home/alex/.config/sublime-text-3/Packages/User/clang_format.sublime-settings",
		"/home/alex/.config/sublime-text-3/Packages/Clang Format/clang_format_custom.sublime-settings",
		"/home/alex/.config/sublime-text-3/Packages/Clang Format/clang_format.sublime-settings",
		"/home/alex/.config/sublime-text-3/Packages/C++ Snippets/reference.md",
		"/home/alex/workspace/dummy/bariumBoxer/build/clockmatrix/revB/revB.mk",
		"/home/alex/.config/sublime-text-3/Packages/User/docker_build.sublime-build",
		"/home/alex/.config/sublime-text-3/Packages/User/ifwrap.sublime-snippet",
		"/home/alex/.config/sublime-text-3/Packages/SublimeCodeIntel/SublimeCodeIntel.sublime-settings",
		"/home/alex/.config/sublime-text-3/Packages/SublimeCodeIntel/Default (Linux).sublime-mousemap",
		"/home/alex/workspace/dummy/bariumBoxer/bin/cm-revB/revBRam.map",
		"/home/alex/.config/sublime-text-3/Packages/Terminal/Default (Linux).sublime-keymap",
		"/home/alex/.config/sublime-text-3/Packages/Makefile/Make.sublime-build",
		"/home/alex/.config/sublime-text-3/Packages/User/idt_default.sublime-snippet",
		"/home/alex/workspace/dummy/bariumBoxer/include/app/configuration.h",
		"/home/alex/workspace/dummy/bariumBoxer/include/boot/appLoader.h",
		"/home/alex/workspace/dummy/bariumBoxer/include/common/core_cm3.h",
		"/home/alex/workspace/dummy/bariumBoxer/include/common/csr/clockmatrix/rev-b/CSR_I2CM.h",
		"/home/alex/workspace/dummy/bariumBoxer/include/common/drivers/I2CM.h",
		"/home/alex/workspace/dummy/bariumBoxer/include/common/Types.h",
		"/home/alex/workspace/dummy/bariumBoxer/build/clockmatrix/fpga/ramApp/fpgaRamApp.mk",
		"/home/alex/workspace/dummy/bariumBoxer/scripts/repoScripts/python/clockMatrix/csrXmlParse/csr/tests/data/expectedScsrHeader.h",
		"/home/alex/workspace/dummy/bariumBoxer/scripts/repoScripts/python/clockMatrix/csrXmlParse/csr/tests/data/expectedCsrHeader.h",
		"/home/alex/workspace/dummy/bariumBoxer/source/common/controllers/eepromCommandController.c",
		"/home/alex/workspace/dummy/bariumBoxer/include/common/controllers/eepromCommandController.h",
		"/home/alex/workspace/dummy/bariumBoxer/source/unitTests/testScsr.c",
		"/home/alex/workspace/dummy/bariumBoxer/scripts/repoScripts/python/clockMatrix/csrXmlParse/csr/elements/module.py",
		"/home/alex/workspace/dummy/bariumBoxer/scripts/repoScripts/python/clockMatrix/csrXmlParse/csr/elements/tests/testCsrModule.py",
		"/home/alex/workspace/dummy/bariumBoxer/source/common/Print.c",
		"/home/alex/workspace/dummy/bariumBoxer/source/common/drivers/EEPROM.c",
		"/home/alex/workspace/dummy/bariumBoxer/include/common/scsr/clockmatrix/rev-b/SCSR_EEPROM.h",
		"/home/alex/workspace/dummy/bariumBoxer/include/common/drivers/EEPROM.h",
		"/home/alex/workspace/dummy/bariumBoxer/include/common/scsr/clockmatrix/rev-b/SCSR_OUTPUT_TDC.h",
		"/home/alex/workspace/dummy/bariumBoxer/include/app/eventTimerTask.h",
		"/home/alex/workspace/dummy/bariumBoxer/source/unitTests/unitTestsOutputTdcTask1.c",
		"/home/alex/workspace/dummy/bariumBoxer/include/common/csr/clockmatrix/fpga/CSR_I2CM.h",
		"/home/alex/workspace/dummy/bariumBoxer/source/app/eventTimerTask.c",
		"/home/alex/workspace/dummy/bariumBoxer/source/unitTests/unitTestsOutputTdcTask3.c",
		"/home/alex/workspace/dummy/bariumBoxer/source/common/drivers/aszrCsr.c",
		"/home/alex/workspace/dummy/bariumBoxer/build/clockmatrix/revB/ramApp/revBRamApp.ld",
		"/home/alex/workspace/dummy/bariumBoxer/source/app/task.c",
		"/home/alex/workspace/dummy/bariumBoxer/source/app/scsrMonTask.c",
		"/home/alex/workspace/dummy/bariumBoxer/build/clockmatrix/fpga/ramApp/fpgaRamApp.ld",
		"/home/alex/workspace/dummy/bariumBoxer/build/clockmatrix/fpga/romImage/fpgaRomImage.ld",
		"/home/alex/workspace/dummy/bariumBoxer/build/clockmatrix/revB/romImage/revBRomImage.ld",
		"/home/alex/workspace/dummy/bariumBoxer/source/app/todTask.c",
		"/home/alex/workspace/dummy/bariumBoxer/include/app/scsrMonTask.h",
		"/home/alex/workspace/dummy/bariumBoxer/scripts/repoScripts/python/clockMatrix/csrXmlParse/csr/elements/alignment/__init__.py",
		"/home/alex/workspace/idt/bariumBoxer/source/app/appMain.c",
		"/home/alex/workspace/idt/bariumBoxer/include/app/task.h",
		"/home/alex/workspace/idt/bariumBoxer/source/common/scsrApi.c",
		"/home/alex/workspace/idt/bariumBoxer/include/common/scsr/clockmatrix/rev-b/SCSR_GENERAL_STATUS.h",
		"/home/alex/workspace/idt/bariumBoxer/include/common/core_cmFunc.h",
		"/home/alex/workspace/idt/bariumBoxer/include/common/Common.h",
		"/home/alex/workspace/idt/bariumBoxer/build/clockmatrix/revB/ramApp/revBRamApp.ld",
		"/home/alex/workspace/idt/bariumBoxer/dependencies/Catch/include/external/clara.h",
		"/home/alex/workspace/idt/bariumBoxer/scripts/ld2vlog",
		"/home/alex/workspace/idt/steelbulldog-collector/ixxat/mpc8313/IEEE1588V2/Target/MPC8313/Proj/app/main.c",
		"/home/alex/workspace/idt/steelbulldog-collector/idtCommon/include/linkedList/cmnLinkedList.h",
		"/home/alex/workspace/idt/steelbulldog-collector/idtCommon/include/messageLog/cmnCallbackLog.h",
		"/home/alex/workspace/idt/steelbulldog-collector/idtCommon/include/messageLog/cmnMessage.h",
		"/home/alex/workspace/idt/steelbulldog-collector/idtCommon/include/messageLog/cmnMessageLogTime.h",
		"/home/alex/workspace/idt/steelbulldog-collector/idtCommon/include/messageLog/cmnMessageMacros.h",
		"/home/alex/workspace/idt/steelbulldog-collector/idtCommon/include/messageLog/cmnStockFormatters.h",
		"/home/alex/workspace/idt/steelbulldog-collector/idtCommon/include/thread/cmnMsgQueue.h",
		"/home/alex/workspace/idt/steelbulldog-collector/idtCommon/include/thread/cmnName.h",
		"/home/alex/workspace/idt/steelbulldog-collector/idtCommon/include/thread/cmnQueue.h",
		"/home/alex/workspace/idt/steelbulldog-collector/idtCommon/include/thread/cmnThread.h",
		"/home/alex/workspace/idt/steelbulldog-collector/idtCommon/src/linkedList/cmnLinkedList.c",
		"/home/alex/workspace/idt/steelbulldog-collector/idtCommon/src/messageLog/cmnCallbackLog.c"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 110.0,
		"where_history":
		[
			"<open folders>",
			"<open folders..",
			"<open folders.",
			"<open folders>,*.h",
			"<open folders>,*.c",
			"<open folders>,*.c, *.h",
			"<open folders>",
			"<open folders>,*.c",
			"<open folders>",
			"<open folders>,*.c",
			"<open folders>",
			"<open folders>,*.c",
			"<open folders>",
			"<open folders>,*.py",
			"<open folders>",
			"<open folders>,*.py",
			"<open folders>",
			"<open folders>,*.c",
			"<open folders>",
			"<open folders>,*.py",
			"<open folders>",
			"<open folders>,*.c",
			"<open folders>",
			"<open folders>,*.py",
			"<open folders>",
			"<open folders>,",
			"<open folders>,*.mk",
			"<open folders>",
			"<open folders>,*.c",
			"<open folders>",
			"<open folders>,-*.xml",
			"<open folders>",
			"/home/alex/workspace/idt/steelbulldog-collector",
			"/home/alex/workspace/idt/steelbulldog-collector,*.c",
			"/home/alex/workspace/idt/steelbulldog-collector",
			"<open folders>"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"strerror",
			"35",
			"input()",
			"%i",
			"\"\"",
			"print",
			"fdunny",
			"my_",
			"Blue",
			"cars",
			"avarage_passengers_per_car",
			"passangers",
			"There",
			"SCSR",
			"float",
			"hwCsrVersion",
			"main",
			"masterDivVal",
			"Read_32_SCSR_DPLL_MASTER_DIV",
			"SCSR_DPLL_MASTER_DIV__0",
			"masterDivVal",
			"master divider",
			"master devider",
			"dpllSM",
			"masterDivVal",
			"master divider",
			"master devider",
			"master",
			"Write_1_XO_DPLL_PAD_CTRL_xo_dpll_en_b",
			"sysApllInit",
			"analogSysApllCsrInit",
			"scsrInitialUpdateSysApllScsr",
			"_en_b",
			"_en",
			"analogSetXoDpllPadEnable",
			"Write_1_XO_DPLL_PAD_CTRL_xo_dpll_en_b",
			"Default_XO_DPLL_PAD_CTRL_xo_dpll_en_b",
			"scsrSysDpllXoFreqHandler",
			"scsrSysDpllHandler",
			"scsrSysDpllXoFreqHandler",
			"E_todIndex_2",
			"init",
			"refSel",
			"outputTdcGlobal",
			"outputTdcConfigure",
			"outputTdcGlobal",
			"OutputTDCConfigure",
			"OutputTDCConfigure   ",
			"outputTdcNotify",
			"freqChangeSource",
			"outputTdcConfigure",
			"E_SCSR_OUTPUT_TDC_REF_SEL_XO",
			"outputTdcConfigure",
			"xo_dpll_en_b",
			"analogSysApllCsrInit",
			"analogSetXoDpllPadEnable",
			"xo_dpll_en_b",
			"defaultApllXtalFrequency",
			"localDeviceInfo",
			"main",
			"C++",
			"Section Info",
			"=",
			"sys_apll_vco_varactor_ptat",
			"sys_apll_vco_vds",
			"localDeviceInfo",
			"eepromAvailable",
			"main",
			"OTP",
			"sysApllVcoCalibration",
			"print",
			"gpioUserControlInputBitfield",
			"control",
			"user",
			"testGpioUserControlUpdateScsrStatus",
			"todSetAccumulator",
			"master_sync_rst",
			"loadConfigurationFromOtp",
			"main",
			"deviceInfo",
			"asm",
			"__asm",
			"buf",
			"I2CM_ReadBytes",
			"ReadBurstBytes",
			"data",
			"buf",
			"data",
			"functionalarea",
			"EEPROM_ADDR_CONFIG_END",
			"eventTimerTask",
			"alignedThresholdCount",
			"align_threshold_count",
			"OUTPUT_TDC_DEFAULT_ALIGNED_THRESHOLD_COUNT",
			"END_ADDR",
			"_END_ADDR",
			"CmnMemset",
			"moduleLen",
			"moduleOutChSysEndAddr",
			"ASSERT",
			"aszrPrintNotSerialized",
			"aszrPrintNot32Aligned",
			"setPrintSilentFlag",
			"testDpllSmReferencePriority",
			"ASSERT",
			"CmnAssert",
			"ASSERT",
			"ASSERT_ENABLE",
			"ASSERT",
			"assert",
			"ASSERT",
			"fit in region",
			"will not fit",
			"will not fit in region",
			"Move some code to RAM3",
			"ASSERT_ENABLE",
			"ASSERT",
			"will not fit",
			"will not fit in region RAM3",
			"will not fit in region `RAM3",
			"ASSERT_ENABLE",
			"moduleOutputTdcEndAddr",
			"moduleOutChSysEndAddr",
			"moduleLen",
			"SCSR_DPLL_MODE",
			"moduleOutChSysEndAddr",
			"SCSR_SYS_ALERT_MASK",
			"__data_start__"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"input()",
			"35",
			"%s",
			"",
			"passengers",
			" = ",
			"moduleLen",
			"<lastCommitDate>",
			"curFailedCase )",
			"!(",
			"",
			".",
			"T_mngDeviceAdaptorCNF73XXPwmDco",
			"frequencyCorrectionPpb",
			"sleepMillisec"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1337,
						"regions":
						{
						},
						"selection":
						[
							[
								1337,
								1337
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Makefile/Makefile.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "tests/hashmap_tests.c",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 725,
						"regions":
						{
						},
						"selection":
						[
							[
								497,
								497
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										496,
										497
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										478,
										479
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/C++/C.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/main.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 430,
						"regions":
						{
						},
						"selection":
						[
							[
								196,
								196
							]
						],
						"settings":
						{
							"SL.63.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										413,
										414
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										305,
										306
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										198,
										199
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										195,
										196
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/C++/C.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/usr/include/errno.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2367,
						"regions":
						{
						},
						"selection":
						[
							[
								2367,
								2367
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 738.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 31.0
	},
	"input":
	{
		"height": 41.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 387.0
	},
	"output.find_results":
	{
		"height": 345.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/C++/C++ Single File.sublime-build",
	"project": "ex37.sublime-project",
	"replace":
	{
		"height": 74.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"gpio",
				"source/unitTests/unitTestsGpioTodNotification.c"
			],
			[
				"",
				"source/app/appMain.c"
			],
			[
				"boot",
				"source/boot/bootMain.c"
			],
			[
				"gpio.",
				"source/common/drivers/GPIO.c"
			],
			[
				"apll",
				"source/app/sysApll.c"
			],
			[
				"main",
				"source/app/appMain.c"
			],
			[
				"GPIO",
				"source/unitTests/unitTestsGpioUserControl.c"
			],
			[
				"tod",
				"source/common/drivers/TOD.c"
			],
			[
				"I2CM",
				"source/common/drivers/I2CM.c"
			],
			[
				"eepromC",
				"include/common/controllers/eepromCommandController.h"
			],
			[
				"start",
				"source/common/startup_cmx.c"
			],
			[
				"Commo",
				"include/common/Common.h"
			],
			[
				"scsrM",
				"source/app/scsrMonTask.c"
			],
			[
				"Task.",
				"source/app/task.c"
			],
			[
				".ld",
				"build/clockmatrix/revB/romImage/revBRomImage.ld"
			],
			[
				"unitTestsGpioAlertOut.c",
				"source/unitTests/unitTestsGpioAlertOut.c"
			],
			[
				".map",
				"bin/cm-revB/revBRam.map"
			],
			[
				".l",
				"build/clockmatrix/fpga/ramApp/fpgaRamApp.ld"
			],
			[
				"EEPRO",
				"source/common/drivers/EEPROM.c"
			],
			[
				"EEPROM.",
				"include/common/drivers/EEPROM.h"
			],
			[
				"ixxat/mpc8313/ieee1588v2/target/mpc8313/proj/app/main.c",
				"steelbulldog-collector/ixxat/mpc8313/IEEE1588V2/Target/MPC8313/Proj/app/main.c"
			],
			[
				"deviceadaptortest.log",
				"idtSystem/deviceAdaptors/deviceAdaptorTest.log"
			],
			[
				"mngdeviceadaptorcnf73xxpwmdco.c",
				"idtSystem/deviceAdaptors/dco/cnf73xxPwmDco/src/mngDeviceAdaptorCNF73XXPwmDco.c"
			],
			[
				"mngdeviceadaptorcon",
				"steelbulldog-collector/idtSystem/deviceAdaptors/dco/idt33x3x/src/mngDeviceAdaptorConfig.c"
			],
			[
				"mngdeviceadaptorconfig.c",
				"steelbulldog-collector/idtSystem/deviceAdaptors/dco/idt33x3x/src/mngDeviceAdaptorConfig.c"
			],
			[
				"main.h",
				"idtIxxatTarget/target/Proj/app/main.h"
			],
			[
				"idtconfig.json",
				"idtBuild/idtConfig/idtConfig.json"
			],
			[
				"main.c",
				"idtIxxatTarget/target/Proj/app/main.c"
			],
			[
				"mngdeviceadaptorts",
				"idtSystem/deviceAdaptors/timeStamp/softwareTimestamping/src/mngDeviceAdaptorTSSoftware.c"
			],
			[
				"osad",
				"idtSystem/osAdaptation/cygwin/src/osAdapt.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 222.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
